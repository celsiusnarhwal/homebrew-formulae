#!/usr/bin/env python3

import argparse
import itertools
import subprocess
from difflib import SequenceMatcher
from pathlib import Path


def main(tap_name: str):
    tap_owner, tap_name = tap_name.split("/")
    tap_dir = "Library/Taps"
    prefixes = [Path("/opt/homebrew"), Path("/usr/local/Homebrew"), Path("/home/linuxbrew/.linuxbrew")]
    tap_names = [tap_name, tap_name.replace("/", "/homebrew-")]

    for prefix, tap in itertools.product(prefixes, tap_names):
        tap_path: Path = prefix / tap_dir / tap_owner / tap_name
        if tap_path.exists():
            print(tap_path.resolve())
            exit()
    else:
        all_taps = subprocess.run(["brew", "tap"], capture_output=True).stdout.decode().splitlines()
        similar_taps = set([tap for tap in all_taps if SequenceMatcher(None, tap_name, tap).ratio() > 0.5])

        print(f'Tap "{tap_name}" not found.', end='')
        if similar_taps:
            print(" Did you mean:")
            for tap in similar_taps:
                print(tap)

        exit(1)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Print the absolute path of a Homebrew tap.")
    parser.add_argument("tap", help="The tap to print the absolute path of.")
    args = parser.parse_args()
    main(args.tap)
